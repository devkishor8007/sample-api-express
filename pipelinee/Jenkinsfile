// scripted pipeline
// node {
//     stage('preperation') {
//         echo 'cloning repo'
//         git url: 'https://github.com/devkishor8007/sample-api-express.git', branch: 'master'
//     }
//     stage('test') {
//         echo 'running test cases'
//         nodejs(nodeJSInstallationName: 'node 18') {
//             sh 'npm i -D'
//             sh 'npm run test'
//         }
//     }
//     stage('build') {
//         echo 'building image'
//         sh 'docker build -t devkishor8007/sample-api-express-pipeline:${BUILD_NUMBER} .'
//     }
//     stage('deploy to docker hub') {
//         withCredentials([usernamePassword(credentialsId: 'dockerhubcred', usernameVariable: 'USERNAME_DOC', passwordVariable: 'PASSWORD_DOC')]) {
//             sh 'docker login -u ${USERNAME_DOC} -p ${PASSWORD_DOC}'
//             sh 'docker image push devkishor8007/sample-api-express-pipeline:${BUILD_NUMBER}'
//         }
//     }
//     stage('cleanup') {
//         sh 'docker logout'
//     }
// }


// Declarative  
pipeline {
    agent any
    environment {
        IMAGE_NAME_DOC = "devkishor8007/sample-api-express-pipeline:${BUILD_NUMBER}"
        scannerHome = tool 'SonarScanner';
    }

    stages {
        stage('preperation') {
            steps {
                echo 'cloning repo'
                git url: 'https://github.com/devkishor8007/sample-api-express.git', branch: 'master'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv() {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            } 
        }
        stage('test') {
            steps {
                echo 'running test cases'
                nodejs(nodeJSInstallationName: 'node 18') {
                    sh 'npm i -D'
                    sh 'npm run test'
                }
            }
        }
        stage('build') {
            steps {
                echo 'building image'
                sh 'docker build -t ${IMAGE_NAME_DOC} .'
            }
        }
        stage('deploy to docker hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhubcred', usernameVariable: 'USERNAME_DOC', passwordVariable: 'PASSWORD_DOC')]) {
                    sh 'docker login -u ${USERNAME_DOC} -p ${PASSWORD_DOC}'
                    sh 'docker image push ${IMAGE_NAME_DOC}'
                }
            }
        }
        stage('cleanup') {
            steps {
                sh 'docker logout'
            }
        }
    }
}

